buildscript {
    ext.kotlinVersion = "1.6.0"
    ext.lwjglVersion = '3.3.1'
    ext.jomlVersion = '1.10.4'

    switch (org.gradle.internal.os.OperatingSystem.current()) {
        case org.gradle.internal.os.OperatingSystem.LINUX:
            ext.lwjglNatives = "natives-linux"
            break
        case org.gradle.internal.os.OperatingSystem.MAC_OS:
            ext.lwjglNatives = natives-macos
            break
        case org.gradle.internal.os.OperatingSystem.WINDOWS:
            def osArch = System.getProperty("os.arch")
            project.ext.lwjglNatives = osArch.contains("64")
                    ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                    : "natives-windows-x86"
            break
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'application'
}

group = 'pt.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'com.github.nflsilva:K3DGE:bf81ca3310'
    implementation 'org.joml:joml:1.10.4'

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
}

test {
    useJUnit()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

application {
    mainClassName = 'MainKt'
}